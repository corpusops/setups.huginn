version: '3.7'
x-images:
  x-base: &base {restart: unless-stopped, env_file: [.env], depends_on: [log]}
  huginn: &huginn
    <<: [ *base ]
    logging: {driver: syslog, options: {tag: "huginn", syslog-address: "tcp://127.0.0.1:45713"}}
    image: "${HUGINN_IMAGE}"
    networks: {huginn: {ipv4_address: "${HUGINN_NETWORK}.23"}}
    command: /scripts/init
    user: root
    entrypoint:
    - /bin/bash
    - '-exc'
    - |
      export PATH=/helpers/alpine:$PATH
      while ! ( dockerize --version >/dev/null 2>&1 );do echo waithelp;sleep 1;done
      SVC_STARTUP_TIMEOUT=$${MYSQL_STARTUP_TIMEOUT:-45s}
      dockerize -wait http://setup-services -timeout $${SVC_STARTUP_TIMEOUT}
      dockerize -wait http://dbs -timeout $${SVC_STARTUP_TIMEOUT}
      chown 1001 /app/{data,log}
      p=/
      ( cd /conf && while read f;do \
        j=$$(echo $$f|sed -re "s/.j?frep//g");\
        frep --overwrite /conf/$$f:$$p/$$j --overwrite;\
        done < <(find -type f) )
      chown 1001 /dev/{stdin,stdout,stderr}
      exec gosu 1001 $$0 $$@
    volumes:
    - "helpers:/helpers"
    - "./huginn:/conf"
    - "$DATA_DIR/huginn/data:/app/data"
    - "$DATA_DIR/huginn/log:/app/log"
    ports: ["${LISTENING_INT_IF}:${LISTENING_INT_HTTP_PORT:-3000}:3000"]
services:
  log:
    <<: [ *base ]
    image: corpusops/rsyslog
    volumes: [logs:/var/log]
    ports: ["127.0.0.1:45713:10514"]
    networks: {huginn: {}}
    depends_on: []
  setup-debian:
    <<: [ *base ]
    logging: {driver: syslog, options: {tag: "setup", syslog-address: "tcp://127.0.0.1:45713"}}
    image: "${SERVICES_DEBIAN_IMAGE}"
    entrypoint:
    - /bin/sh
    - '-exc'
    - |-
      mkdir -pv /helpers/debian >/dev/null 2>&1|| true
      cp -rfv /cops_helpers/. /helpers/debian
      alias nc="busybox nc"
      while true;do printf "HTTP/2.1 200 OK\n\nS"| ( nc -l -p 80 || /bin/true);done
    logging: {driver: syslog, options: {tag: "setup-debian", syslog-address: "tcp://127.0.0.1:45713"}}
    networks: {huginn: {}}
    volumes:
    - "helpers:/helpers"
  setup-services:
    <<: [ *base ]
    logging: {driver: syslog, options: {tag: "setup", syslog-address: "tcp://127.0.0.1:45713"}}
    image: "${SERVICES_IMAGE}"
    entrypoint:
    - /bin/sh
    - '-exc'
    - |-
      mkdir -pv /helpers/alpine >/dev/null 2>&1|| true
      cp -rfv /cops_helpers/. /helpers/alpine
      while true;do printf "HTTP/1.1 200 OK\n\nS"| ( nc -l -p 80 || /bin/true);done
    logging: {driver: syslog, options: {tag: "setup", syslog-address: "tcp://127.0.0.1:45713"}}
    networks: {huginn: {}}
    volumes:
    - "helpers:/helpers"
  huginn: &services_huginn
    <<: [ *huginn ]
    ports: ["${LISTENING_INT_IF}:${LISTENING_INT_PORT}:8080"]
  threaded:
    <<: [ *huginn ]
    command: /scripts/init bin/threaded.rb
    networks: {huginn: {}}
    logging: {driver: syslog, options: {tag: "threaded", syslog-address: "tcp://127.0.0.1:45713"}}
  nginx:
    <<: [ *base ]
    depends_on: [log, huginn]
    logging: {driver: syslog, options: {tag: "nginx", syslog-address: "tcp://127.0.0.1:45713"}}
    networks: {huginn: {}}
    image: "${NGINX_IMAGE}"
    ports: ["${LISTENING_IF}:${LISTENING_PORT}:80"]
    entrypoint:
    - bash
    - "-ec"
    - |-
      cp -vrf /etc/nginx.d/. /etc/nginx
      ( cd /etc/nginx && while read f;do \
        j=$$(echo $$f|sed -re "s/.j?frep//g");echo "Gen: $$f > $$j";\
        frep $$f:$$j --overwrite; \
        done < <(find -type f -name "*frep"); )
      exec nginx -g "daemon off;"
    volumes:
    - ./nginx:/etc/nginx.d
    - "$DATA_DIR/web:/web:ro"
  db:
    <<: [ *base ]
    logging: {driver: syslog, options: {tag: "db", syslog-address: "tcp://127.0.0.1:45713"}}
    image: "$MYSQL_IMAGE"
    networks: {huginn: {}}
    ports: ["${LISTENING_INT_IF}:${LISTENING_INT_MYSQL_PORT:-3306}:3306"]
    volumes:
    - mysql:/var/lib/mysql
    - "$DATA_DIR:/huginn-data"
    - /root/.ssh:/root/.ssh:ro
  dbs:
    <<: [ *base ]
    depends_on: [log, db]
    logging: {driver: syslog, options: {tag: "dbs", syslog-address: "tcp://127.0.0.1:45713"}}
    networks: {huginn: {}}
    image: "$DBS_IMAGE"
    entrypoint:
    - "bash"
    - "-ec"
    - |-
      set -x
      MYSQL_STARTUP_TIMEOUT=$${MYSQL_STARTUP_TIMEOUT:-45s}
      flag=/started_$$(echo $$MYSQL_DB|sed -re "s![/:]!__!g")
      if [ -e "$$flag" ];then rm -f "$$flag";fi
      echo "Try connection to mysql & wait for db init" >&2
      ( while true;do if ( \
        echo "select 1;"\
        | mysql --user="$$MYSQL_USER" --password="$$MYSQL_PASSWORD" --host="$$MYSQL_HOST" \
           "$$MYSQL_DB"\
      );then touch $$flag && break;fi;done )&
      dockerize -wait file://$$flag -timeout $${MYSQL_STARTUP_TIMEOUT}
      set -x
      ( while true;do printf "HTTP/1.1 200 OK\n\nS"| ( nc -l -p 80 || /bin/true);done )&
      exec dbs-entry.sh $$@
    volumes:
    - backupdb-dumps:/var/db_smart_backup/
    - backupdb-logs:/var/db_smart_backup/logs/
networks:
  huginn:
    driver: bridge
    name: "${HUGINN_NETWORK_NAME:-huginn}"
    ipam: {driver: default, config: [{subnet: "${HUGINN_NETWORK}.0/24"}]}
volumes:
  logs:
  helpers:
  mysql:
  backupdb-dumps:
  backupdb-logs:
